AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31

################################
###  マッピング
################################
# Mappings:
#   # 定数
#   Constants:
#     # プロジェクト名を辞書型に修正
    

################################
###  パラメータ
################################
Parameters:
  # プロジェクト名
  ProjectName:
    Type: String
    Default: melon

  # デプロイ環境
  Environment:
    Type: String
    Default: dev
    AllowedValues: [dev, prd]

################################
###  グローバル
################################
Globals:
  Function:
    Runtime: python3.12
    Handler: app.lambda_handler
    Layers:
      - arn:aws:lambda:ap-northeast-1:017000801446:layer:AWSLambdaPowertoolsPythonV2:77 #AWS公式 LambdaPowertools
      - !Ref CommonLayer

Resources:
  ################################
  ###  Lambda Layer
  ###  Lambda共通レイヤー
  ################################ 
  CommonLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: !Sub "${ProjectName}_${Environment}_fake_thesis_common_layer"
      Description: Common utilities and validators and etc
      ContentUri: layers/common/
      CompatibleRuntimes:
        - python3.12
    Metadata:
      BuildMethod: python3.12
      RetentionPolicy: Delete

  ################################
  ###  Lambda
  ###  論文フォーマット取得関数
  ################################ 
  GetFakeThesisTitleCategoryFormat:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${ProjectName}_${Environment}_get_fake_thesis_title_category_format"
      CodeUri: functions/features/get_fake_thesis_title_category_format/
      Description: "論文フォーマット取得関数" #関数の説明
      MemorySize: 256 # メモリサイズ (MB)
      Timeout: 900 # タイムアウト(秒)
      Role: !GetAtt LambdaExecutionRole.Arn # IAMロールの指定
      Layers:
        - arn:aws:lambda:ap-northeast-1:770693421928:layer:Klayers-p312-requests:8 #Klayers のrequests
      Environment:
        Variables:
          DYNAMO_DB_TABLE: !Sub "{{resolve:ssm:/${ProjectName}/${Environment}/DYNAMO_DB_CATEGORY_MASTER_TABLE}}"

  ################################
  ###  Lambda
  ###  フォーマットからプロンプトを生成する関数
  ################################ 
  GeneratePromptParameters:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${ProjectName}_${Environment}_generate_prompt_parameters"
      CodeUri: functions/features/generate_prompt_parameters/
      Description: "プロンプトパラメータ生成関数" #関数の説明
      MemorySize: 512 # メモリサイズ (MB)
      Timeout: 900 # タイムアウト(秒)
      Role: !GetAtt LambdaExecutionRole.Arn # IAMロールの指定
      Environment:
        Variables:
          DYNAMO_DB_TABLE: !Sub "{{resolve:ssm:/${ProjectName}/${Environment}/DYNAMO_DB_CATEGORY_MASTER_TABLE}}"

  ################################
  ###  Lambda
  ###  論文データ・文章生成関数
  ################################ 
  RequestGenerativeAiModelApi:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${ProjectName}_${Environment}_request_generative_ai_model_api"
      CodeUri: functions/features/request_generative_ai_model_api/
      Description: "論文データ・文章生成関数" #関数の説明
      MemorySize: 512 # メモリサイズ (MB)
      Timeout: 900 # タイムアウト(秒)
      Role: !GetAtt LambdaExecutionRole.Arn # IAMロールの指定
      Environment:
        Variables:
          ANTHROPIC_API_URL: !Sub "{{resolve:ssm:/${ProjectName}/${Environment}/ANTHROPIC_API_URL}}"
          ANTHROPIC_API_KEY: !Sub "{{resolve:ssm:/${ProjectName}/${Environment}/ANTHROPIC_API_KEY}}"
          ANTHROPIC_API_MODEL: !Sub "{{resolve:ssm:/${ProjectName}/${Environment}/ANTHROPIC_API_MODEL}}"
          
  ################################
  ###  Lambda
  ###  論文データのスキーマバリデーション関数
  ################################
  FakeThesisDataValidation:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${ProjectName}_${Environment}_fake_thesis_data_validation"
      CodeUri: functions/features/fake_thesis_data_validation/
      Description: "論文データのスキーマバリデーション関数" #関数の説明
      MemorySize: 256 # メモリサイズ (MB)
      Timeout: 900 # タイムアウト(秒)
      Role: !GetAtt LambdaExecutionRole.Arn # IAMロールの指定

  ################################
  ###  Lambda
  ###  論文データ修正関数
  ################################ 
  FixFakeThesisData:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${ProjectName}_${Environment}_fix_fake_thesis_data"
      CodeUri: functions/features/fix_fake_thesis_data/
      Description: "論文データ修正関数" #関数の説明
      MemorySize: 256 # メモリサイズ (MB)
      Timeout: 900 # タイムアウト(秒)
      Role: !GetAtt LambdaExecutionRole.Arn # IAMロールの指定

  ################################
  ###  Lambda
  ###  グラフデータの作成
  ################################ 
  GenerateFakeGraph:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${ProjectName}_${Environment}_generate_fake_graph"
      CodeUri: functions/features/generate_fake_graph/
      Description: "グラフデータの作成関数" 
      MemorySize: 1024 # メモリサイズ (MB)
      Timeout: 900 # タイムアウト(秒)
      Role: !GetAtt LambdaExecutionRole.Arn # IAMロールの指定
      Layers:
        - arn:aws:lambda:ap-northeast-1:770693421928:layer:Klayers-p312-numpy:8 #Klayers numpy
      Environment:
        Variables:
          S3_BUCKET: !Sub "{{resolve:ssm:/${ProjectName}/${Environment}/S3_BUCKET}}"
  
  
  ################################
  ###  Lambda
  ###  表データの作成
  ################################ 
  GenerateFakeTable:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${ProjectName}_${Environment}_generate_fake_table"
      CodeUri: functions/features/generate_fake_table/
      Description: "表データ生成関数" #関数の説明
      MemorySize: 1024 # メモリサイズ (MB)
      Timeout: 900 # タイムアウト(秒)
      Role: !GetAtt LambdaExecutionRole.Arn # IAMロールの指定
      Environment:
        Variables:
          S3_BUCKET: !Sub "{{resolve:ssm:/${ProjectName}/${Environment}/S3_BUCKET}}"

  
  ################################
  ###  Lambda
  ###  数式データの作成
  ################################ 
  GenerateFakeFormula:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${ProjectName}_${Environment}_generate_fake_formula"
      CodeUri: functions/features/generate_fake_formula/
      Description: "数式データ生成関数" #関数の説明
      MemorySize: 512 # メモリサイズ (MB)
      Timeout: 900 # タイムアウト(秒)
      Role: !GetAtt LambdaExecutionRole.Arn # IAMロールの指定
      Environment:
        Variables:
          S3_BUCKET: !Sub "{{resolve:ssm:/${ProjectName}/${Environment}/S3_BUCKET}}"
  
  
  ################################
  ###  Lambda
  ###  PDF変換関数
  ################################ 
  ConvertToPdf:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${ProjectName}_${Environment}_convert_to_pdf"
      CodeUri: functions/features/convert_to_pdf/
      Description: "PDF変換関数" #関数の説明
      MemorySize: 512 # メモリサイズ (MB)
      Timeout: 900 # タイムアウト(秒)
      Role: !GetAtt LambdaExecutionRole.Arn # IAMロールの指定
      Environment:
        Variables:
          S3_BUCKET: !Sub "{{resolve:ssm:/${ProjectName}/${Environment}/S3_BUCKET}}"

  ################################
  ###  Lambda
  ###  ワークフローコールバック関数
  ################################ 
  SendWorkflowCallback:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${ProjectName}_${Environment}_send_workflow_callback"
      CodeUri: functions/stepfunctions/send_workflow_callback/
      Description: "サブワークフローの結果をコールバックする関数" #関数の説明
      MemorySize: 256 # メモリサイズ (MB)
      Timeout: 900 # タイムアウト(秒)
      Role: !GetAtt LambdaExecutionRole.Arn # IAMロールの指定
  
  ################################
  ###  Lambda
  ###  進捗更新関数
  ################################ 
  WorkflowProgressRecorder:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${ProjectName}_${Environment}_workflow_progress_recorder"
      CodeUri: functions/stepfunctions/workflow_progress_recorder/
      Description: "各ステートの進捗を更新する関数" #関数の説明
      MemorySize: 256 # メモリサイズ (MB)
      Timeout: 900 # タイムアウト(秒)
      Role: !GetAtt LambdaExecutionRole.Arn # IAMロールの指定
      Environment:
        Variables:
          DYNAMO_DB_WORKFLOW_PROGRESS_TABLE: !Sub "{{resolve:ssm:/${ProjectName}/${Environment}/DYNAMO_DB_WORKFLOW_PROGRESS_TABLE}}"

  ################################
  ###  Lambdaで使用するIAMロールの作成
  ################################ 
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${ProjectName}_${Environment}_lambda_role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaExecutionPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "arn:aws:logs:*:*:*"

              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:ListBucket
                  - s3:PutObject
                  - s3:DeleteObject
                Resource:
                  - !Sub arn:aws:s3:::${FakeThesisBucket}  
                  - !Sub arn:aws:s3:::${FakeThesisBucket}/*  

              - Effect: Allow
                Action:
                  - dynamodb:Query
                  - dynamodb:Scan
                  - dynamodb:BatchGetItem
                  - dynamodb:BatchWriteItem
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:UpdateItem
                  - dynamodb:DeleteItem
                Resource:
                  - !GetAtt MasterFakeThesisCategoryFormatsTable.Arn
                  - !GetAtt WorkflowProgressManagementTable.Arn

              - Effect: Allow
                Action:
                  - sqs:SendMessage
                  - sqs:ReceiveMessage
                  - sqs:DeleteMessage
                  - sqs:GetQueueAttributes
                Resource: "arn:aws:sqs:*:*:*"

  ################################
  ###  DynamoDB
  ###  論文フォーマットマスターテーブル
  ################################ 
  MasterFakeThesisCategoryFormatsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "${ProjectName}_${Environment}_master_fake_thesis_category_formats_table"
      # TableName: master_fake_thesis_category_formats_table
      AttributeDefinitions:
        - AttributeName: category_type_en
          AttributeType: S
        - AttributeName: category_type_jp
          AttributeType: S
      KeySchema:
        - AttributeName: category_type_en
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: "category_title_jp_index_gsi"
          KeySchema:
            - AttributeName: "category_type_jp"
              KeyType: "HASH"
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1
      BillingMode: PROVISIONED
      # BillingMode: PAY_PER_REQUEST
      # OnDemandThroughput:
      #    MaxReadRequestUnits: 1000
      #    MaxWriteRequestUnits: 1000
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      DeletionProtectionEnabled: true
      SSESpecification:
        SSEEnabled: true
    DeletionPolicy: Retain

  ################################
  ###  DynamoDB
  ###  ワークフロー進捗管理テーブル
  ################################ 
  WorkflowProgressManagementTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "${ProjectName}_${Environment}_workflow_progress_management_table"
      AttributeDefinitions:
        - AttributeName: workflow_id
          AttributeType: S
        - AttributeName: state_name#timestamp
          AttributeType: S
        - AttributeName: execution_id
          AttributeType: S
      KeySchema:
        - AttributeName: workflow_id
          KeyType: HASH
        - AttributeName: state_name#timestamp
          KeyType: RANGE
      GlobalSecondaryIndexes:
        - IndexName: "execution_id_index_gsi"
          KeySchema:
            - AttributeName: "execution_id"
              KeyType: "HASH"
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1
      BillingMode: PROVISIONED
      # BillingMode: PAY_PER_REQUEST
      # OnDemandThroughput:
      #   MaxReadRequestUnits: 1000
      #   MaxWriteRequestUnits: 1000
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      DeletionProtectionEnabled: true
      SSESpecification:
        SSEEnabled: true
    DeletionPolicy: Retain

  ################################
  ###  S3
  ###  論文データ保管用バケット
  ################################ 
  FakeThesisBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${ProjectName}-${Environment}-fake-thesis-bucket"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: "Suspended" # バージョニングなし設定
    DeletionPolicy: Retain # バケットを削除せず保持
    UpdateReplacePolicy: Retain