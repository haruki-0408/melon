AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31

################################
###  マッピング
################################
# Mappings:
#   # 定数
#   Constants:
#     # プロジェクト名を辞書型に修正
    

################################
###  パラメータ
################################
Parameters:
  # プロジェクト名
  ProjectName:
    Type: String
    Default: melon

  # デプロイ環境
  Environment:
    Type: String
    Default: dev
    AllowedValues: [dev, prd]

################################
###  グローバル
################################
Globals:
  Function:
    Runtime: python3.12
    Handler: app.lambda_handler
    Layers:
      - arn:aws:lambda:ap-northeast-1:017000801446:layer:AWSLambdaPowertoolsPythonV2:77 #AWS公式 LambdaPowertools
      - !Ref CommonLayer

Resources:
  ################################
  ###  Lambda Layer
  ###  Lambda共通レイヤー
  ################################ 
  CommonLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: !Sub "${ProjectName}_${Environment}_fake_thesis_common_layer"
      Description: Common utilities and validators and etc
      ContentUri: layers/common/
      CompatibleRuntimes:
        - python3.12
    Metadata:
      BuildMethod: python3.12
      RetentionPolicy: Delete

  ################################
  ###  Lambda
  ###  論文フォーマット取得関数
  ################################ 
  GetFakeThesisTitleCategoryFormat:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${ProjectName}_${Environment}_get_fake_thesis_title_category_format"
      CodeUri: functions/features/get_fake_thesis_title_category_format/
      Description: "論文フォーマット取得関数" #関数の説明
      MemorySize: 256 # メモリサイズ (MB)
      Timeout: 900 # タイムアウト(秒)
      Role: !GetAtt LambdaExecutionRole.Arn # IAMロールの指定
      Layers:
        - arn:aws:lambda:ap-northeast-1:770693421928:layer:Klayers-p312-requests:8 #Klayers のrequests
      Environment:
        Variables:
          DYNAMO_DB_CATEGORY_MASTER_TABLE: !Sub "{{resolve:ssm:/${ProjectName}/${Environment}/DYNAMO_DB_CATEGORY_MASTER_TABLE}}"

  ################################
  ###  Lambda
  ###  フォーマットからプロンプトを生成する関数
  ################################ 
  GeneratePromptParameters:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${ProjectName}_${Environment}_generate_prompt_parameters"
      CodeUri: functions/features/generate_prompt_parameters/
      Description: "プロンプトパラメータ生成関数" #関数の説明
      MemorySize: 512 # メモリサイズ (MB)
      Timeout: 900 # タイムアウト(秒)
      Role: !GetAtt LambdaExecutionRole.Arn # IAMロールの指定

  ################################
  ###  Lambda
  ###  論文データ・文章生成関数
  ################################ 
  RequestGenerativeAiModelApi:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${ProjectName}_${Environment}_request_generative_ai_model_api"
      CodeUri: functions/features/request_generative_ai_model_api/
      Description: "論文データ・文章生成関数" #関数の説明
      MemorySize: 512 # メモリサイズ (MB)
      Timeout: 900 # タイムアウト(秒)
      Role: !GetAtt LambdaExecutionRole.Arn # IAMロールの指定
      Environment:
        Variables:
          ANTHROPIC_API_URL: !Sub "{{resolve:ssm:/${ProjectName}/${Environment}/ANTHROPIC_API_URL}}"
          ANTHROPIC_API_KEY: !Sub "{{resolve:ssm:/${ProjectName}/${Environment}/ANTHROPIC_API_KEY}}"
          ANTHROPIC_API_MODEL: !Sub "{{resolve:ssm:/${ProjectName}/${Environment}/ANTHROPIC_API_MODEL}}"
          
  ################################
  ###  Lambda
  ###  論文データのスキーマバリデーション関数
  ################################
  FakeThesisDataValidation:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${ProjectName}_${Environment}_fake_thesis_data_validation"
      CodeUri: functions/features/fake_thesis_data_validation/
      Description: "論文データのスキーマバリデーション関数" #関数の説明
      MemorySize: 256 # メモリサイズ (MB)
      Timeout: 900 # タイムアウト(秒)
      Role: !GetAtt LambdaExecutionRole.Arn # IAMロールの指定

  ################################
  ###  Lambda
  ###  論文データ修正関数
  ################################ 
  FixFakeThesisData:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${ProjectName}_${Environment}_fix_fake_thesis_data"
      CodeUri: functions/features/fix_fake_thesis_data/
      Description: "論文データ修正関数" #関数の説明
      MemorySize: 256 # メモリサイズ (MB)
      Timeout: 900 # タイムアウト(秒)
      Role: !GetAtt LambdaExecutionRole.Arn # IAMロールの指定

  ################################
  ###  Lambda
  ###  グラフデータの作成
  ################################ 
  GenerateFakeGraph:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${ProjectName}_${Environment}_generate_fake_graph"
      CodeUri: functions/features/generate_fake_graph/
      Description: "グラフデータの作成関数" 
      MemorySize: 1024 # メモリサイズ (MB)
      Timeout: 900 # タイムアウト(秒)
      Role: !GetAtt LambdaExecutionRole.Arn # IAMロールの指定
      Layers:
        - arn:aws:lambda:ap-northeast-1:770693421928:layer:Klayers-p312-numpy:8 #Klayers numpy
      Environment:
        Variables:
          S3_BUCKET: !Sub "{{resolve:ssm:/${ProjectName}/${Environment}/S3_BUCKET}}"
  
  
  ################################
  ###  Lambda
  ###  表データの作成
  ################################ 
  GenerateFakeTable:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${ProjectName}_${Environment}_generate_fake_table"
      CodeUri: functions/features/generate_fake_table/
      Description: "表データ生成関数" #関数の説明
      MemorySize: 1024 # メモリサイズ (MB)
      Timeout: 900 # タイムアウト(秒)
      Role: !GetAtt LambdaExecutionRole.Arn # IAMロールの指定
      Environment:
        Variables:
          S3_BUCKET: !Sub "{{resolve:ssm:/${ProjectName}/${Environment}/S3_BUCKET}}"

  
  ################################
  ###  Lambda
  ###  数式データの作成
  ################################ 
  GenerateFakeFormula:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${ProjectName}_${Environment}_generate_fake_formula"
      CodeUri: functions/features/generate_fake_formula/
      Description: "数式データ生成関数" #関数の説明
      MemorySize: 512 # メモリサイズ (MB)
      Timeout: 900 # タイムアウト(秒)
      Role: !GetAtt LambdaExecutionRole.Arn # IAMロールの指定
      Environment:
        Variables:
          S3_BUCKET: !Sub "{{resolve:ssm:/${ProjectName}/${Environment}/S3_BUCKET}}"
  
  
  ################################
  ###  Lambda
  ###  PDF変換関数
  ################################ 
  ConvertToPdf:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${ProjectName}_${Environment}_convert_to_pdf"
      CodeUri: functions/features/convert_to_pdf/
      Description: "PDF変換関数" #関数の説明
      MemorySize: 512 # メモリサイズ (MB)
      Timeout: 900 # タイムアウト(秒)
      Role: !GetAtt LambdaExecutionRole.Arn # IAMロールの指定
      Environment:
        Variables:
          S3_BUCKET: !Sub "{{resolve:ssm:/${ProjectName}/${Environment}/S3_BUCKET}}"

  ################################
  ###  Lambda
  ###  ワークフローコールバック関数
  ################################ 
  SendWorkflowCallback:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${ProjectName}_${Environment}_send_workflow_callback"
      CodeUri: functions/stepfunctions/send_workflow_callback/
      Description: "サブワークフローの結果をコールバックする関数" #関数の説明
      MemorySize: 256 # メモリサイズ (MB)
      Timeout: 900 # タイムアウト(秒)
      Role: !GetAtt LambdaExecutionRole.Arn # IAMロールの指定
  
  ################################
  ###  Lambda
  ###  進捗更新関数
  ################################ 
  WorkflowProgressRecorder:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${ProjectName}_${Environment}_workflow_progress_recorder"
      CodeUri: functions/stepfunctions/workflow_progress_recorder/
      Description: "各ステートの進捗を更新する関数" #関数の説明
      MemorySize: 256 # メモリサイズ (MB)
      Timeout: 900 # タイムアウト(秒)
      Role: !GetAtt LambdaExecutionRole.Arn # IAMロールの指定
      Environment:
        Variables:
          DYNAMO_DB_WORKFLOW_PROGRESS_TABLE: !Sub "{{resolve:ssm:/${ProjectName}/${Environment}/DYNAMO_DB_WORKFLOW_PROGRESS_TABLE}}"

  ################################
  ###  Lambda
  ###  テスト
  ################################ 
  Test:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${ProjectName}_${Environment}_test"
      CodeUri: functions/test/
      Description: "各ステートの進捗を更新する関数" #関数の説明
      MemorySize: 256 # メモリサイズ (MB)
      Timeout: 900 # タイムアウト(秒)
      Role: !GetAtt LambdaExecutionRole.Arn # IAMロールの指定
      Environment:
        Variables:
          SQS_QUEUE_URL: "value"

  ################################
  ### IAM Role 
  ### Lambda実行ロール
  ################################ 
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${ProjectName}_${Environment}_lambda_role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaExecutionPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "arn:aws:logs:*:*:*"

              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:ListBucket
                  - s3:PutObject
                  - s3:DeleteObject
                Resource:
                  - !Sub arn:aws:s3:::${FakeThesisBucket}  
                  - !Sub arn:aws:s3:::${FakeThesisBucket}/*  

              - Effect: Allow
                Action:
                  - dynamodb:Query
                  - dynamodb:Scan
                  - dynamodb:BatchGetItem
                  - dynamodb:BatchWriteItem
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:UpdateItem
                  - dynamodb:DeleteItem
                Resource:
                  - !GetAtt MasterFakeThesisCategoryFormatsTable.Arn
                  - !GetAtt WorkflowProgressManagementTable.Arn

              - Effect: Allow
                Action:
                  - sqs:SendMessage
                  - sqs:ReceiveMessage
                  - sqs:DeleteMessage
                  - sqs:GetQueueAttributess
                Resource: 
                  - !GetAtt WorkflowCallbackTriggerQueue.Arn
              
              - Effect: Allow
                Action:
                  - states:SendTaskSuccess
                  - states:SendTaskFailure
                Resource: "*"

  ################################
  ###  DynamoDB
  ###  論文フォーマットマスターテーブル
  ################################ 
  MasterFakeThesisCategoryFormatsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "${ProjectName}_${Environment}_master_fake_thesis_category_formats_table"
      AttributeDefinitions:
        - AttributeName: category_type_en
          AttributeType: S
        - AttributeName: category_type_jp
          AttributeType: S
      KeySchema:
        - AttributeName: category_type_en
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: "category_title_jp_index_gsi"
          KeySchema:
            - AttributeName: "category_type_jp"
              KeyType: "HASH"
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1
      BillingMode: PROVISIONED
      # BillingMode: PAY_PER_REQUEST
      # OnDemandThroughput:
      #    MaxReadRequestUnits: 1000
      #    MaxWriteRequestUnits: 1000
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      DeletionProtectionEnabled: true
      SSESpecification:
        SSEEnabled: true
    DeletionPolicy: Retain

  ################################
  ###  DynamoDB
  ###  ワークフロー進捗管理テーブル
  ################################ 
  WorkflowProgressManagementTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "${ProjectName}_${Environment}_workflow_progress_management_table"
      AttributeDefinitions:
        - AttributeName: workflow_id
          AttributeType: S
        - AttributeName: state_name#timestamp
          AttributeType: S
        - AttributeName: execution_id
          AttributeType: S
      KeySchema:
        - AttributeName: workflow_id
          KeyType: HASH
        - AttributeName: state_name#timestamp
          KeyType: RANGE
      GlobalSecondaryIndexes:
        - IndexName: "execution_id_index_gsi"
          KeySchema:
            - AttributeName: "execution_id"
              KeyType: "HASH"
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1
      BillingMode: PROVISIONED
      # BillingMode: PAY_PER_REQUEST
      # OnDemandThroughput:
      #   MaxReadRequestUnits: 1000
      #   MaxWriteRequestUnits: 1000
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      DeletionProtectionEnabled: true
      SSESpecification:
        SSEEnabled: true
    DeletionPolicy: Retain

  ################################
  ###  S3
  ###  論文データ保管用バケット
  ################################ 
  FakeThesisBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${ProjectName}-${Environment}-fake-thesis-bucket"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: "Suspended" # バージョニングなし設定
    DeletionPolicy: Retain # バケットを削除せず保持
    UpdateReplacePolicy: Retain

  ################################
  ###  SQS
  ###  ワークフロー間バッファ標準キュー
  ################################ 
  WorkflowCallbackTriggerQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "${ProjectName}_${Environment}_workflow_callback_trigger_queue"

  
  ################################
  ###  EventBridge Pipes
  ###  サブワークフローPipes
  ################################ 
  SqsToStepFunctionsPipe:
    Type: AWS::Pipes::Pipe
    Properties:
      Name: !Sub "${ProjectName}_${Environment}_sqs_to_stepfunctions_pipe"
      RoleArn: !GetAtt EventBridgePipesRole.Arn
      Source: !GetAtt WorkflowCallbackTriggerQueue.Arn
      SourceParameters:
        SqsQueueParameters:
          BatchSize: 1
      Target: !Ref SubWorkflowStateMachine
      TargetParameters:
        StepFunctionStateMachineParameters:
          InvocationType: FIRE_AND_FORGET
        InputTemplate: '{"task_token": <$.body.task_token>, "payload": <$.body.payload>}'

  
  ################################
  ### IAM Role 
  ### EventBridgePipesRole
  ################################ 
  EventBridgePipesRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${ProjectName}_${Environment}_eventbridge_pipes_role"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: pipes.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: !Sub "${ProjectName}_${Environment}_eventbridge_pipes_policy"
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - sqs:ReceiveMessage
                  - sqs:DeleteMessage
                  - sqs:GetQueueAttributes
                Resource: !GetAtt WorkflowCallbackTriggerQueue.Arn
              - Effect: Allow
                Action:
                  - states:StartExecution
                Resource: !GetAtt SubWorkflowStateMachine.Arn

  ################################
  ### Stepfunctions 
  ### メインワークフロー
  ################################ 
  MainWorkflowStateMachine:
    Type: AWS::Serverless::StateMachine
    DependsOn: StepFunctionsExecutionRole 
    Properties:
      Name: !Sub "${ProjectName}_${Environment}_main_workflow_state_machine"
      Role: !GetAtt StepFunctionsExecutionRole.Arn 
      Definition: 
        StartAt: GetFakeThesisTitleCategoryFormatTask
        States:
          GetFakeThesisTitleCategoryFormatTask:
            Type: Task
            Resource: "arn:aws:states:::lambda:invoke"
            Parameters:
              FunctionName: !Ref GetFakeThesisTitleCategoryFormat
              Payload:
                "category.$": "$.category"
            ResultSelector:
              sections_format.$: "$.Payload.body.sections_format"
            ResultPath: "$.raw_format"
            Next: GeneratePromptParametersTask

          GeneratePromptParametersTask:
            Type: Task
            Resource: "arn:aws:states:::lambda:invoke"
            Parameters:
              FunctionName: !Ref GeneratePromptParameters
              Payload:
                "title.$": "$.title"
                "sections_format.$": "$.raw_format.sections_format"
            ResultSelector:
              system_prompt.$: "$.Payload.body.system_prompt"
            ResultPath: "$.prompt"
            Next: StartSubWorkflowAndWaitForCallback

          StartSubWorkflowAndWaitForCallback:
            Type: Task
            Resource: "arn:aws:states:::sqs:sendMessage.waitForTaskToken"
            Parameters:
              QueueUrl: !Ref WorkflowCallbackTriggerQueue
              MessageBody:
                task_token.$: "$$.Task.Token"
                payload:
                  workflow_id.$: "$.workflow_id"
                  title.$: "$.title"
                  system_prompt.$: "$.prompt.system_prompt"
                  sections_format.$: "$.raw_format.sections_format"
            ResultPath: "$.sub_workflow_result"
            Catch:
              - ErrorEquals:
                  - "States.ALL"
                ResultPath: "$.sub_workflow_error"
                Next: FailState
            Next: ParallelProcessingState

          ParallelProcessingState:
            Type: Parallel
            Branches:
              - StartAt: GenerateFakeGraphTask
                States:
                  GenerateFakeGraphTask:
                    Type: Task
                    Resource: "arn:aws:states:::lambda:invoke"
                    InputPath: "$.sub_workflow_result"
                    Parameters:
                      FunctionName: !Ref GenerateFakeGraph
                      Payload:
                        "workflow_id.$": "$.workflow_id"
                        "graphs.$": "$.data.graphs"
                    ResultPath: null
                    End: true

              - StartAt: GenerateFakeTableTask
                States:
                  GenerateFakeTableTask:
                    Type: Task
                    Resource: "arn:aws:states:::lambda:invoke"
                    InputPath: "$.sub_workflow_result"
                    Parameters:
                      FunctionName: !Ref GenerateFakeTable
                      Payload:
                        "workflow_id.$": "$.workflow_id"
                        "tables.$": "$.data.tables"
                    ResultPath: null
                    End: true

              - StartAt: GenerateFakeFormulaTask
                States:
                  GenerateFakeFormulaTask:
                    Type: Task
                    Resource: "arn:aws:states:::lambda:invoke"
                    InputPath: "$.sub_workflow_result"
                    Parameters:
                      FunctionName: !Ref GenerateFakeFormula
                      Payload:
                        "workflow_id.$": "$.workflow_id"
                        "formulas.$": "$.data.formulas"
                      
                    ResultPath: null
                    End: true
            Next: ConvertToPdfTask

          ConvertToPdfTask:
            Type: Task
            Resource: "arn:aws:states:::lambda:invoke"
            
            Parameters:
              FunctionName: !Ref ConvertToPdf
              Payload:
                "workflow_id.$": "$.workflow_id"
                "title.$": "$.title"
                "abstract.$": "$.sub_workflow_result.abstract"
                "section_formats.$": "$.sub_workflow_result.sections_format"
            ResultPath: null
            End: true

          FailState:
            Type: Fail
            Cause: "SubWorkflow Failed"



  ################################
  ### Stepfunctions 
  ### サブワークフロー
  ################################ 
  SubWorkflowStateMachine:
    Type: AWS::Serverless::StateMachine
    DependsOn: StepFunctionsExecutionRole 
    Properties:
      Name: !Sub "${ProjectName}_${Environment}_sub_workflow_state_machine"
      Role: !GetAtt StepFunctionsExecutionRole.Arn 
      Definition:
        StartAt: InitializeExtractFirstItemPass
        States:
          InitializeExtractFirstItemPass:
            Type: Pass
            Parameters:
              "task_token.$": "$[0].task_token"
              "payload.$": "$[0].payload"
            ResultPath: "$"
            Next: RetryCountPass

          RetryCountPass:
            Type: Pass
            Result:
              retry_count: 0
            ResultPath: "$.retry_count"
            Next: RequestGenerativeAiModelApiTask

          RequestGenerativeAiModelApiTask:
            Type: Task
            Resource: "arn:aws:states:::lambda:invoke"
            Parameters:
              FunctionName: !Ref RequestGenerativeAiModelApi
              Payload:
                "workflow_id.$": "$.payload.workflow_id"
                "title.$": "$.payload.title"
                "system_prompt.$": "$.payload.system_prompt"
                "sections_format.$": "$.payload.sections_format"
            ResultSelector: 
              "workflow_id.$" : "$.Payload.body.workflow_id"
              "title.$" : "$.Payload.body.title"
              "abstract.$" : "$.Payload.body.abstract"
              "sections_format.$" : "$.Payload.body.sections_format"
            ResultPath: "$.payload"
            Next: FakeThesisDataValidationTask
            Catch:
              - ErrorEquals:
                  - "States.ALL"
                ResultPath: "$.error"
                Next: SendFailureCallbackTask

          FakeThesisDataValidationTask:
            Type: Task
            Resource: "arn:aws:states:::lambda:invoke"
            Parameters:
              FunctionName: !Ref FakeThesisDataValidation
              Payload:
                "workflow_id.$": "$.payload.workflow_id"
                "title.$": "$.payload.title"
                "abstract.$": "$.payload.abstract"
                "sections_format.$": "$.payload.sections_format"
            ResultSelector: 
              "graphs.$" : "$.Payload.body.graphs"
              "tables.$" : "$.Payload.body.tables"
              "formulas.$" : "$.Payload.body.formulas"
            ResultPath: "$.payload.data"
            Next: SendSuccessCallbackTask
            Catch:
              - ErrorEquals:
                  - "SchemaValidationError"
                ResultPath: "$.payload.errors"
                Next: FixFakeThesisDataTask
              - ErrorEquals:
                  - "States.ALL"
                ResultPath: "$.error"
                Next: SendFailureCallbackTask

          FixFakeThesisDataTask:
            Type: Task
            Resource: "arn:aws:states:::lambda:invoke"
            Parameters:
              FunctionName: !Ref FixFakeThesisData
              Payload:
                "workflow_id.$": "$.payload.workflow_id"
                "title.$": "$.payload.title"
                "abstract.$": "$.payload.abstract"
                "sections_format.$": "$.payload.sections_format"
                "errors.$": "$.payload.errors"
            ResultSelector: 
              "workflow_id.$" : "$.Payload.body.workflow_id"
              "title.$" : "$.Payload.body.title"
              "abstract.$" : "$.Payload.body.abstract"
              "sections_format.$" : "$.Payload.body.sections_format"
            ResultPath: "$.payload"
            Next: IncrementRetryCountPass
            Catch:
              - ErrorEquals:
                  - "States.ALL"
                ResultPath: "$.error"
                Next: SendFailureCallbackTask

          IncrementRetryCountPass:
            Type: Pass
            Parameters:
              "retry_count.$": "States.MathAdd($.retry_count, 1)"
            ResultPath: "$.retry_count"
            Next: CheckRetryCountChoice

          CheckRetryCountChoice:
            Type: Choice
            Choices:
              - Variable: "$.retry_count"
                NumericLessThanEquals: 3
                Next: FakeThesisDataValidationTask
            Default: SendFailureCallbackTask

          SendSuccessCallbackTask:
            Type: Task
            Resource: "arn:aws:states:::lambda:invoke"
            Parameters:
              FunctionName: !Ref SendWorkflowCallback
              Payload:
                "task_token.$": "$.task_token"
                "status": "SUCCEEDED"
                "payload.$": "$.payload"
            End: true
            Catch:
              - ErrorEquals:
                  - "States.ALL"
                ResultPath: "$.error"
                Next: SendFailureCallbackTask

          SendFailureCallbackTask:
            Type: Task
            Resource: "arn:aws:states:::lambda:invoke"
            Parameters:
              FunctionName: !Ref SendWorkflowCallback
              Payload:
                "task_token.$": "$.task_token"
                "status": "FAILED"
                "error.$": "$.error"
            End: true

  ################################
  ### IAM Role 
  ### StepfunctionsExecutionRole
  ################################ 
  StepFunctionsExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${ProjectName}_${Environment}_stepfunctions_execution_role"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: states.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: !Sub "${ProjectName}_${Environment}_stepfunctions_execution_policy"
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                Resource: "*"
              - Effect: Allow
                Action:
                  - sqs:SendMessage
                Resource:  
                  - !GetAtt WorkflowCallbackTriggerQueue.Arn
  